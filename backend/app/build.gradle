plugins {
  id "java"
  id "org.springframework.boot" version "3.2.4"
  id "io.spring.dependency-management" version "1.1.4"
  id "org.domaframework.doma.compile" version "2.0.0"
  id "com.palantir.git-version" version "3.0.0"
}

group = "com.mofushop"
version = gitVersion()

tasks {
  compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Adoma.domain.converters=com.mofushop.config.doma.DomainConverterProvider"]
  }
  compileTestJava {
    options.encoding = "UTF-8"
  }
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(21))
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

def secretsProperties = new Properties()
def secretsPropertiesFile = project.rootProject.file("secrets.properties")
if(secretsPropertiesFile.exists()){
  secretsProperties.load(secretsPropertiesFile.newDataInputStream())
}
repositories {
  mavenCentral()
  maven {
    url "https://maven.pkg.github.com/mazeneko/mazewands"
    credentials {
      username = secretsProperties.getProperty("gpr.user") ?: System.getenv("USERNAME")
      password = secretsProperties.getProperty("gpr.token") ?: System.getenv("TOKEN")
    }
  }
}

dependencies {
  implementation "io.github.mazeneko:mazewands-core:${mazewandsVersion}"
  implementation "io.github.mazeneko:mazewands-persistence:${mazewandsVersion}"
  implementation "io.github.mazeneko:mazewands-web:${mazewandsVersion}"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.seasar.doma:doma-core:${domaVersion}"
  implementation "org.seasar.doma:doma-slf4j:${domaVersion}"
  implementation "org.seasar.doma.boot:doma-spring-boot-starter:${domaSpringBootVersion}"
  compileOnly "org.projectlombok:lombok"
  developmentOnly "org.springframework.boot:spring-boot-devtools"
  runtimeOnly "org.postgresql:postgresql"
  annotationProcessor "org.seasar.doma:doma-processor:${domaVersion}"
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
  annotationProcessor "org.projectlombok:lombok"
  testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.named("test") {
  useJUnitPlatform()
}
